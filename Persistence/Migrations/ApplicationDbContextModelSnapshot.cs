// <auto-generated />
using System;
using CourseManager.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CourseManager.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("CourseManager.Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8b3e038d-407d-480e-8082-28d79c3bb587"),
                            CreatedOn = new DateTime(2021, 1, 29, 11, 3, 36, 427, DateTimeKind.Utc).AddTicks(3225),
                            Name = "Angular",
                            Price = 215m
                        },
                        new
                        {
                            Id = new Guid("e75eb48d-0223-4796-adb8-aba89e226772"),
                            CreatedOn = new DateTime(2021, 1, 29, 11, 3, 36, 427, DateTimeKind.Utc).AddTicks(3731),
                            Name = "Asp.net",
                            Price = 26m
                        },
                        new
                        {
                            Id = new Guid("4fe23cf3-a2db-421d-995c-92d42395e11f"),
                            CreatedOn = new DateTime(2021, 1, 29, 11, 3, 36, 427, DateTimeKind.Utc).AddTicks(3736),
                            Name = "Maya",
                            Price = 28m
                        });
                });

            modelBuilder.Entity("CourseManager.Domain.Entities.Timetable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndCourse")
                        .HasColumnType("time");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("StartCourse")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Timetables");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f861e2fd-f062-420f-9c29-05e9fc4ec4ee"),
                            CourseId = new Guid("4fe23cf3-a2db-421d-995c-92d42395e11f"),
                            CreatedOn = new DateTime(2021, 1, 29, 11, 3, 36, 433, DateTimeKind.Utc).AddTicks(9847),
                            DayOfWeek = 3,
                            EndCourse = new TimeSpan(0, 12, 0, 0, 0),
                            StartCourse = new TimeSpan(0, 10, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("CourseManager.Domain.Entities.Timetable", b =>
                {
                    b.HasOne("CourseManager.Domain.Entities.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });
#pragma warning restore 612, 618
        }
    }
}
